/**
 * This holds the data to get from a table
 * @export
 * @class TableDataGetter
 * @member rows - holds a range of rows to get
 * @member fields - holds information of the fields to get
 */
export declare class TableDataGetter {
    rows: TableRowsData;
    fields: RowFieldsData[];
    constructor(rows: TableRowsData, fields: RowFieldsData[]);
}
/**
 * This holds the optional data of the rows of a table
 * @export
 * @class TableRowsData
 */
export declare class TableRowsData {
    range: RowRange | null;
    criteria: CriteriaData | null;
    constructor(range: RowRange);
}
/**
 * This holds data for a search criteria to get data from the table
 * @export
 * @class CriteriaData
 */
export declare class CriteriaData {
    path: string;
    getter: string;
    operation: string;
    value: any;
}
/**
 * This is a detailed range class
 * @export
 * @class RowRange
 * @member from - the start row
 * @member to - the end row
 */
export declare class RowRange {
    from: number;
    to: number;
    constructor(from: number, to: number);
}
/**
 * This holds information of the fields of the table
 * @export
 * @class RowFieldsData
 * @member path - the path to the field
 * @member key - a unique key of the field
 * @member attributes - a list of attributes to return its values
 */
export declare class RowFieldsData {
    path: string;
    key: string;
    attributes: {
        [attribute: string]: string;
    }[];
    constructor(path: string, key: string, attrs: {
        [fieldKey: string]: any;
    }[]);
}
/**
 * This holds the data to set to a table
 * @export
 * @class TableDataSetter
 * @member rowId - the id of the row to set
 * @member fields -  holds information of the fields to set
 */
export declare class TableDataSetter {
    rowId: number;
    fields: FieldsSetData[];
    constructor(rowId: number, fields: FieldsSetData[]);
}
/**
 * This contains information about the fields data to set in a table
 * @export
 * @class FieldsSetData
 * @member path - the path to the field
 * @member setter - the function name to call (a setter function)
 * @member value - the value to set
 */
export declare class FieldsSetData {
    path: string;
    setter: string;
    value: any;
    constructor(path: string, setter: string, value: any);
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FieldsSetData = exports.TableDataSetter = exports.RowFieldsData = exports.RowRange = exports.CriteriaData = exports.TableRowsData = exports.TableDataGetter = void 0;
/**
 * This holds the data to get from a table
 * @export
 * @class TableDataGetter
 * @member rows - holds a range of rows to get
 * @member fields - holds information of the fields to get
 */
var TableDataGetter = /** @class */ (function () {
    function TableDataGetter(rows, fields) {
        this.rows = rows;
        this.fields = fields;
    }
    return TableDataGetter;
}());
exports.TableDataGetter = TableDataGetter;
/**
 * This holds the optional data of the rows of a table
 * @export
 * @class TableRowsData
 */
var TableRowsData = /** @class */ (function () {
    function TableRowsData(range) {
        this.range = range;
    }
    return TableRowsData;
}());
exports.TableRowsData = TableRowsData;
/**
 * This holds data for a search criteria to get data from the table
 * @export
 * @class CriteriaData
 */
var CriteriaData = /** @class */ (function () {
    function CriteriaData() {
    }
    return CriteriaData;
}());
exports.CriteriaData = CriteriaData;
/**
 * This is a detailed range class
 * @export
 * @class RowRange
 * @member from - the start row
 * @member to - the end row
 */
var RowRange = /** @class */ (function () {
    function RowRange(from, to) {
        this.from = from;
        this.to = to;
    }
    return RowRange;
}());
exports.RowRange = RowRange;
/**
 * This holds information of the fields of the table
 * @export
 * @class RowFieldsData
 * @member path - the path to the field
 * @member key - a unique key of the field
 * @member attributes - a list of attributes to return its values
 */
var RowFieldsData = /** @class */ (function () {
    function RowFieldsData(path, key, attrs) {
        this.path = path;
        this.key = key;
        this.attributes = attrs;
    }
    return RowFieldsData;
}());
exports.RowFieldsData = RowFieldsData;
/**
 * This holds the data to set to a table
 * @export
 * @class TableDataSetter
 * @member rowId - the id of the row to set
 * @member fields -  holds information of the fields to set
 */
var TableDataSetter = /** @class */ (function () {
    function TableDataSetter(rowId, fields) {
        this.rowId = rowId;
        this.fields = fields;
    }
    return TableDataSetter;
}());
exports.TableDataSetter = TableDataSetter;
/**
 * This contains information about the fields data to set in a table
 * @export
 * @class FieldsSetData
 * @member path - the path to the field
 * @member setter - the function name to call (a setter function)
 * @member value - the value to set
 */
var FieldsSetData = /** @class */ (function () {
    function FieldsSetData(path, setter, value) {
        this.path = path;
        this.setter = setter;
        this.value = value;
    }
    return FieldsSetData;
}());
exports.FieldsSetData = FieldsSetData;
//# sourceMappingURL=TableData.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const TableCellWebControlCoverageHandler_1 = require("./TableCellWebControlCoverageHandler");
class TableHeaderCellWebControlCoverageHandler extends TableCellWebControlCoverageHandler_1.default {
    constructor() {
        super(...arguments);
        this.type = "TableHeaderCell";
        // public getName(repositoryNode: any): string {
        //     // Try to see if we have text. If not, go to parent
        //     let name: string = this.cleanName(this.ownText(this.$currentNode));
        //     if (name.length > 0) return name;
        //     //TODO:super.getName(repositoryNode); using customCoverageHandler which doesn't exits in Tables
        //     return ""; //super.getName(repositoryNode);
        // }
        // public getAutoGeneratedIdPrefix(): string {
        //     // Try to make the ID meaningful by having the right prefix when id is auto generated
        //     // Try to see if we have text. If not, go to parent
        //     let id: string = this.cleanId(this.ownText(this.$currentNode));
        //     if (id.length > 0) {
        //         return id;
        //     }
        //     return super.getAutoGeneratedIdPrefix();
        // }
    }
}
exports.default = TableHeaderCellWebControlCoverageHandler;
//# sourceMappingURL=TableHeaderCellWebControlCoverageHandler.js.map
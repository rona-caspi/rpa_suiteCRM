import { BaseCustomControlCoverageHandler } from "@jacada-jbot/base/include/CoverageHandlers/BaseCustomControlCoverageHandler";
import { GenericResult } from "@jacada-jbot/base/include/Model/GenericResult";
export default class WebCustomTableControlCoverageHandler extends BaseCustomControlCoverageHandler {
    readonly type: string;
    node: JQuery;
    static TABLE_TYPE_UNKNOWN: number;
    static TABLE_TYPE_GRID: number;
    static TABLE_TYPE_SINGLE_SELECTION: number;
    tableType: number;
    constructor(node: HTMLElement);
    /**
     * This method gets all the rows of the table, that are inside the "body" of the table
     * @returns
     */
    getTableRows(): JQuery;
    /**
     * This method gets the header row of the table
     * @returns
     */
    getTableHeader(): HTMLElement;
    /**
     * This method gets a node, and returns its' column name
     * @param node
     * @returns
     */
    getColumnName(node: HTMLElement): string;
    /**
     * This method gets the name of the field that is identified by column name and number
     * @param columnName
     * @param columnNumber
     * @returns
     */
    getFieldName(columnName: string, columnNumber: number): string;
    /**
     * This method gets the cell that is under the given node
     * @param node
     * @returns
     */
    getCell(node: HTMLElement): HTMLElement;
    /**
     *  This method updates elementNode with the specific values in order to identify the element correctly
     * @param elementNode the element node to update
     */
    updateElementRepositoryNode(elementNode: any): void;
    /**
     * This method indicates if this table is capturable, default value is true.
     * @returns
     */
    isCapturable(): boolean;
    /**
     * Getter of attribute isExits
     * @returns true - always
     */
    isExists(): GenericResult;
}

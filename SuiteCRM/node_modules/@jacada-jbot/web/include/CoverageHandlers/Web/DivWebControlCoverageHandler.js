"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const WebCustomControlCoverageHandler_1 = require("./WebCustomControlCoverageHandler");
/**
 * Coverage handler for a div element
 */
class DivWebControlCoverageHandler extends WebCustomControlCoverageHandler_1.WebCustomControlCoverageHandler {
    constructor() {
        super(...arguments);
        this.type = "Div";
        //  /**
        //  * This method creates a selector from this coverage handler to childDomNode
        //  * @param childDomNode
        //  * @param useExistingSelector
        //  * @returns a selector
        //  */
        // public createSelectorToChild(childDomNode : HTMLElement, useExistingSelector : boolean) : string {
        //     // Get our JQuery path from this element to the given child node
        //     let partialSelector : string = this.createSelectorFromParentToChild(this.domNode, childDomNode);
        //     // As we will find ourselves, this partial selector is enough
        //     return partialSelector;
        // }
    }
    startRecording() {
        throw new Error("Method not implemented.");
    }
    get isNodeToBeAddedToRepository() {
        return false;
    }
    areChildrenCapturable() {
        return true;
    }
    areChildrenRecordable() {
        return true;
    }
    isRecordable() {
        return false;
    }
    isCapturable() {
        return false;
    }
}
exports.default = DivWebControlCoverageHandler;
//# sourceMappingURL=DivWebControlCoverageHandler.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const GenericResult_1 = require("@jacada-jbot/base/include/Model/GenericResult");
const Log4jConfig_1 = require("@jacada-jbot/base/include/Utils/Log4jConfig");
const WebCustomControlCoverageHandler_1 = require("./WebCustomControlCoverageHandler");
const log = Log4jConfig_1.logFactory.getLogger("TextInputWebControlCoverageHandler");
/**
 * Coverage handler for a text output
 */
class TextOutputWebControlCoverageHandler extends WebCustomControlCoverageHandler_1.WebCustomControlCoverageHandler {
    constructor() {
        super(...arguments);
        this.type = "TextOutput";
    }
    startRecording() {
        return true;
    }
    /**
     *
     * @returns text from text output
     */
    getText() {
        let text = this.node.text();
        return new GenericResult_1.GenericResult(true, null, text);
    }
    updateElementRepositoryNode(elementNode) {
        elementNode.name = this.node.text();
        elementNode.config.nodeName = this.node[0].nodeName;
        let selector = elementNode.config.fields[0]["selector"];
        elementNode.config.fields[0]["selector"] = selector.replace("('#text')", ".contents().filter(function(){return this.nodeType == Node.TEXT_NODE;})");
        return elementNode;
    }
    isRecordable() {
        return false;
    }
    isListenable() {
        return false;
    }
}
exports.default = TextOutputWebControlCoverageHandler;
//# sourceMappingURL=TextOutputWebControlCoverageHandler.js.map